---

import { Navbar, NavLink } from '../Navbar';
import { Button } from '../Button';

import { Image } from 'astro:assets';

import HamburgerIconLight from '../../assets/hamburger-icon-light.svg';
// import HamburgerIconDark from '../../assets/hamburger-icon-dark.svg';

import routes from '../../global/routes'

import type { INavLink } from '../Navbar/types.ts';

const navbarData: INavLink[] = [
	{
		url: routes.home,
		label: 'Home',
	},
	{
		url: routes.about,
		label: 'About Me',
	},
	{
		url: routes.works,
		label: 'Works',
	},
	{
		url: routes.blog,
		label: 'Blog',
	},
	{
		url: routes.contact,
		label: 'Contact Me',
	},
];

---

<header class="px-4 flex justify-center py-4 border-b border-primary-200 dark:border-primary-700 bg-background-base dark:bg-primary-900 transition-colors duration-300 sticky top-0 z-50 backdrop-blur-sm bg-opacity-95 dark:bg-opacity-95">
	<div class="max-w-7xl w-full flex justify-between items-center">
		<Navbar class="sm:hidden flex">
			<Button id='hamburger-menu-btn' class="py-2 px-3 relative border border-primary-300 dark:border-primary-600 bg-background-base dark:bg-primary-800 rounded-sm hover:bg-secondary-100 dark:hover:bg-secondary-800 transition-all duration-300" style="outline" data-show="false">
				<Image src={HamburgerIconLight} alt='hamburger menu icon.' />	
				<div id="hamburger-menu-container" class="hidden absolute top-12 right-0 bg-background-base dark:bg-primary-800 border border-primary-200 dark:border-primary-600 w-48 rounded-sm shadow-lg dark:shadow-xl">
					<div class="py-2">
						{navbarData.map((n: INavLink) => <NavLink {...n} />)}
					</div>
				</div>
			</Button>
		</Navbar>
		<Navbar class="hidden sm:flex">
			{navbarData.map((n: INavLink) => <NavLink {...n} />)}
		</Navbar>
		
		<!-- Dark Mode Toggle -->
		<button 
			id="theme-toggle" 
			class="ml-4 p-3 bg-background-base dark:bg-primary-800 border border-primary-300 dark:border-primary-600 rounded-sm hover:bg-secondary-100 dark:hover:bg-secondary-800 transition-all duration-300"
			aria-label="Toggle dark mode"
		>
			<!-- Sun icon for light mode -->
			<svg class="w-5 h-5 text-primary-800 dark:text-white block dark:hidden" fill="currentColor" viewBox="0 0 20 20">
				<path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
			</svg>
			<!-- Moon icon for dark mode -->
			<svg class="w-5 h-5 text-white hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
				<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
			</svg>
		</button>
	</div>
</header>

<script>
	const hamburgerBtn = document.getElementById('hamburger-menu-btn');
	const hamburgerMenuContainer = document.getElementById("hamburger-menu-container");

	hamburgerBtn?.setAttribute('data-clicked', 'false');

	hamburgerBtn?.addEventListener('click', () => {
		const currState: string | undefined = hamburgerBtn.dataset.clicked;
		if(currState === 'true') {
			hamburgerBtn.setAttribute('data-clicked', 'false');
			hamburgerMenuContainer?.classList.add('hidden');
		} else {
			hamburgerBtn.setAttribute('data-clicked', 'true');
			hamburgerMenuContainer?.classList.remove('hidden');
		}
	})

	window.addEventListener('click', (e) => {
		if(!hamburgerMenuContainer?.contains(e?.target as any) && !hamburgerBtn?.contains(e?.target as any)) {
			hamburgerBtn?.setAttribute('data-clicked', 'false');
			hamburgerMenuContainer?.classList.add('hidden');
		}
	})
</script>
